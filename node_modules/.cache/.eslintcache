[{"C:\\school\\webdev\\crud_app_frontend\\src\\index.js":"1","C:\\school\\webdev\\crud_app_frontend\\src\\reportWebVitals.js":"2","C:\\school\\webdev\\crud_app_frontend\\src\\App.js":"3","C:\\school\\webdev\\crud_app_frontend\\src\\store\\index.js":"4","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\index.js":"5","C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\index.js":"6","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\CampusContainer.js":"7","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\AllCampusesContainer.js":"8","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\HomePageContainer.js":"9","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\NewStudentContainer.js":"10","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\StudentContainer.js":"11","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\AllStudentsContainer.js":"12","C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\campuses.js":"13","C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\students.js":"14","C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\campus.js":"15","C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\student.js":"16","C:\\school\\webdev\\crud_app_frontend\\src\\store\\thunks.js":"17","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\Header.js":"18","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\HomePageView.js":"19","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\NewStudentView.js":"20","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\AllStudentsView.js":"21","C:\\school\\webdev\\crud_app_frontend\\src\\store\\actions\\actionTypes.js":"22","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\index.js":"23","C:\\school\\webdev\\crud_app_frontend\\src\\store\\actions\\actionCreators.js":"24","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\StudentView.js":"25","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\CampusView.js":"26","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\AllCampusesView.js":"27","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\EditStudentContainer.js":"28","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\EditStudentView.js":"29","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\NewCampusContainer.js":"30","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\NewCampusView.js":"31","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\EditCampusContainer.js":"32","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\EditCampusView.js":"33"},{"size":962,"mtime":1650754369414,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1650754369414,"results":"36","hashOfConfig":"35"},{"size":1310,"mtime":1652379401849,"results":"37","hashOfConfig":"35"},{"size":1416,"mtime":1650754369415,"results":"38","hashOfConfig":"35"},{"size":1121,"mtime":1652379401851,"results":"39","hashOfConfig":"35"},{"size":834,"mtime":1652073251217,"results":"40","hashOfConfig":"35"},{"size":2089,"mtime":1652491627851,"results":"41","hashOfConfig":"35"},{"size":2569,"mtime":1652138893173,"results":"42","hashOfConfig":"35"},{"size":657,"mtime":1650754369411,"results":"43","hashOfConfig":"35"},{"size":4493,"mtime":1651983056103,"results":"44","hashOfConfig":"35"},{"size":2578,"mtime":1651983056103,"results":"45","hashOfConfig":"35"},{"size":2346,"mtime":1650754369410,"results":"46","hashOfConfig":"35"},{"size":1304,"mtime":1652138893175,"results":"47","hashOfConfig":"35"},{"size":1234,"mtime":1650754369417,"results":"48","hashOfConfig":"35"},{"size":975,"mtime":1650754369416,"results":"49","hashOfConfig":"35"},{"size":968,"mtime":1650754369417,"results":"50","hashOfConfig":"35"},{"size":4598,"mtime":1652138893176,"results":"51","hashOfConfig":"35"},{"size":2285,"mtime":1652486520966,"results":"52","hashOfConfig":"35"},{"size":470,"mtime":1650754369413,"results":"53","hashOfConfig":"35"},{"size":3254,"mtime":1652368378009,"results":"54","hashOfConfig":"35"},{"size":1425,"mtime":1651891412427,"results":"55","hashOfConfig":"35"},{"size":565,"mtime":1652138893175,"results":"56","hashOfConfig":"35"},{"size":1045,"mtime":1652379401853,"results":"57","hashOfConfig":"35"},{"size":1452,"mtime":1652073378058,"results":"58","hashOfConfig":"35"},{"size":1322,"mtime":1651983056105,"results":"59","hashOfConfig":"35"},{"size":1336,"mtime":1652491637810,"results":"60","hashOfConfig":"35"},{"size":2215,"mtime":1652487277127,"results":"61","hashOfConfig":"35"},{"size":3739,"mtime":1651983056102,"results":"62","hashOfConfig":"35"},{"size":3006,"mtime":1651983056104,"results":"63","hashOfConfig":"35"},{"size":3828,"mtime":1652487351510,"results":"64","hashOfConfig":"35"},{"size":2506,"mtime":1652475445873,"results":"65","hashOfConfig":"35"},{"size":4003,"mtime":1652073378055,"results":"66","hashOfConfig":"35"},{"size":2729,"mtime":1652073378057,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1hyj983",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\school\\webdev\\crud_app_frontend\\src\\index.js",[],["137","138"],"C:\\school\\webdev\\crud_app_frontend\\src\\reportWebVitals.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\App.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\index.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\index.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\index.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\CampusContainer.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\AllCampusesContainer.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\HomePageContainer.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\NewStudentContainer.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\StudentContainer.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\AllStudentsContainer.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\campuses.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\students.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\campus.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\reducers\\student.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\thunks.js",["139"],"/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\r\nimport * as ac from './actions/actionCreators';  // Import Action Creators (\"ac\" keyword Action Creator)\r\nconst axios = require('axios');\r\n\r\n//All Campuses\r\n// THUNK CREATOR:\r\nexport const fetchAllCampusesThunk = () => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get \"campuses\" data from database\r\n    let res = await axios.get(`/api/campuses`);  \r\n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.fetchAllCampuses(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Single Campus\r\n// THUNK CREATOR:\r\nexport const fetchCampusThunk = (id) => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get a student data (based on \"id\")from database\r\n    let res = await axios.get(`/api/campuses/${id}`);  \r\n    dispatch(ac.fetchCampus(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Edit Campus\r\n// THUNK CREATOR:\r\nexport const editCampusThunk = campus => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"put\" call to update campus (based on \"id\" and \"campus\" object's data) from database\r\n    let updatedCampus = await axios.put(`/api/campuses/${campus.id}`, campus); \r\n    // Update successful so change state with dispatch\r\n    dispatch(ac.editCampus(updatedCampus));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Add Campus\r\n// THUNK CREATOR:\r\nexport const addCampusThunk = (campus) => async (dispatch) => {\r\n  try {\r\n    let res = await axios.post(`/api/campuses`, campus);\r\n    dispatch(ac.addCampus(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Delete Campus\r\n// THUNK CREATOR:\r\nexport const deleteCampusThunk = campusId => async (dispatch) => {\r\n  try {\r\n    let res = await axios.delete(`/api/campuses/${campusId}`);\r\n    dispatch(ac.deleteCampus(campusId));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// All Students\r\n// THUNK CREATOR:\r\nexport const fetchAllStudentsThunk = () => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get \"students\" data from database\r\n    let res = await axios.get(`/api/students`);  \r\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.fetchAllStudents(res.data));  \r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Add Student\r\n// THUNK CREATOR:\r\nexport const addStudentThunk = (student) => async (dispatch) => {  // The THUNK\r\n  try {\r\n    // API \"post\" call to add \"student\" object's data to database\r\n    let res = await axios.post(`/api/students`, student);  \r\n    // Call Action Creator to return Action object (type + payload with new students data)\r\n    // Then dispatch the Action object to Reducer to update state \r\n    dispatch(ac.addStudent(res.data));\r\n    return res.data;\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Delete Student\r\n// THUNK CREATOR:\r\nexport const deleteStudentThunk = studentId => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"delete\" call to delete student (based on \"studentID\") from database\r\n    await axios.delete(`/api/students/${studentId}`);  \r\n    // Delete successful so change state with dispatch\r\n    dispatch(ac.deleteStudent(studentId));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Edit Student\r\n// THUNK CREATOR:\r\nexport const editStudentThunk = student => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\r\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student); \r\n    // Update successful so change state with dispatch\r\n    dispatch(ac.editStudent(updatedStudent));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Single Student\r\n// THUNK CREATOR:\r\nexport const fetchStudentThunk = id => async dispatch => {  // The THUNK\r\n  try {\r\n    // API \"get\" call to get a specific student (based on \"id\") data from database\r\n    let res = await axios.get(`/api/students/${id}`);  \r\n    // Call Action Creator to return Action object (type + payload with student data)\r\n    // Then dispatch the Action object to Reducer to display student data \r\n    dispatch(ac.fetchStudent(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\Header.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\HomePageView.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\NewStudentView.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\AllStudentsView.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\actions\\actionTypes.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\index.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\store\\actions\\actionCreators.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\StudentView.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\CampusView.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\AllCampusesView.js",["140"],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\EditStudentContainer.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\EditStudentView.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\NewCampusContainer.js",["141","142"],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\NewCampusView.js",[],"C:\\school\\webdev\\crud_app_frontend\\src\\components\\containers\\EditCampusContainer.js",["143","144"],"import Header from './Header';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchAllStudentsThunk, fetchStudentThunk } from \"../../store/thunks\";\r\nimport { fetchAllCampusesThunk, fetchCampusThunk } from \"../../store/thunks\";\r\nimport { editCampusThunk } from \"../../store/thunks\";\r\nimport { EditCampusView } from \"../views\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass EditCampusContainer extends Component {\r\n    // Get campus data from database\r\n    componentDidMount() {\r\n      //getting campus ID from url\r\n      this.props.fetchCampus(this.props.match.params.id);\r\n      this.props.fetchAllStudents();\r\n      console.log(\"checking -->\"); //testing purposes\r\n      console.log(this.props.campus.students); //testing purposes\r\n    }\r\n  \r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        name: \"\",\r\n        address: \"\",\r\n        imageUrl: \"\",\r\n        description: \"\",\r\n        studentId: \"\", //used to verify if a student exists\r\n        studentsArray: [],\r\n        campus: this.props.campus,\r\n        allstudents: this.props.allStudents,\r\n        campusId: this.props.match.params.id //id of campus we are editing\r\n    };\r\n    }\r\n  \r\n    handleChange = event => {\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      });\r\n    }\r\n  \r\n    // Take action after user click the submit button\r\n    handleSubmit = async event => {\r\n      event.preventDefault();  // Prevent browser reload/refresh after submit.\r\n      \r\n      if(!(this.state.allstudents.map(({id}) => id)).includes(parseInt(this.state.studentId))){\r\n        alert(\"StudentID is not valid, please enter a valid studentID.\")\r\n        this.setState({\r\n          redirect: false\r\n        })\r\n      }\r\n      else{\r\n        const campus = {\r\n          name: this.state.name,\r\n          address: this.state.address,\r\n          imageUrl: this.state.imageUrl,\r\n          description: this.state.description,\r\n          studentId: this.state.studentId, //need to be able to take in studentId and push to students array in campus object\r\n          id: this.state.campusId\r\n        };\r\n        \r\n        await this.props.editCampus(campus);\r\n        this.props.campus.students.push(this.state.studentId);\r\n  \r\n        // Update state, and trigger redirect to show the edited campus.\r\n        this.setState({\r\n          name: '',\r\n          address: '',\r\n          imageUrl: '',\r\n          description: '',\r\n          studentId: this.state.studentId,\r\n          redirect: true\r\n        });\r\n      }\r\n    }\r\n  \r\n    // Render Campus view by passing campus data as props to the corresponding View component\r\n    render() {\r\n      if(this.state.redirect) {\r\n        return (<Redirect to={`/campus/${this.props.match.params.id}`}/>)\r\n      }\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <EditCampusView campus={this.props.campus}\r\n          handleChange = {this.handleChange} \r\n          handleSubmit={this.handleSubmit}\r\n          allStudents={this.props.allStudents}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  const mapState = (state) => {\r\n    return {\r\n      campus: state.campus,\r\n      allStudents: state.allStudents\r\n    };\r\n  };\r\n  \r\n  // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n  // The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\n  const mapDispatch = (dispatch) => {\r\n    return {\r\n      fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\r\n      editCampus: (campus) => dispatch(editCampusThunk(campus)),\r\n      fetchAllStudents: () => dispatch(fetchAllStudentsThunk())\r\n    };\r\n  };\r\n  \r\n  \r\n  // Export store-connected container by default\r\n  // EditCampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n  // (and re-read the values when the Store State updates).\r\n  export default connect(mapState, mapDispatch)(EditCampusContainer);","C:\\school\\webdev\\crud_app_frontend\\src\\components\\views\\EditCampusView.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":64,"column":9,"nodeType":"151","messageId":"152","endLine":64,"endColumn":12},{"ruleId":"149","severity":1,"message":"153","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":56,"column":36,"nodeType":"156","messageId":"157","endLine":56,"endColumn":38},{"ruleId":"154","severity":1,"message":"155","line":66,"column":19,"nodeType":"156","messageId":"157","endLine":66,"endColumn":21},{"ruleId":"149","severity":1,"message":"158","line":4,"column":33,"nodeType":"151","messageId":"152","endLine":4,"endColumn":50},{"ruleId":"149","severity":1,"message":"159","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":31},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fetchStudentThunk' is defined but never used.","'fetchAllCampusesThunk' is defined but never used.","no-global-assign","no-unsafe-negation"]